#!/bin/bash

# Simple script to dump PostgreSQL databases to disk.

# Location to place backups.
backup_dir="/var/backups/postgresql"

rundate=`date +%Y%m%d`
backup_log=$backup_dir/pg_backup$rundate.log

# List of databases to backup
databases=(uzerp uzerp-test)

# Max backups to keep
max_backups=7

echo "Postgres Cleanup and Backup, " `date` > $backup_log
echo "=========================================================" >> $backup_log
echo >> $backup_log
echo -n "Vacuuming:" >> $backup_log
for i in "${databases[@]}"; do
        /usr/bin/vacuumdb -z $i >/dev/null 2>&1
        if [ $? -ne "0" ]
        then
          echo 'Failed to vacuum database' $i  >> $backup_log
          echo 'Failed to vacuum database' $i
        fi
        echo -n " $i" >> $backup_log
done
echo "." >> $backup_log
echo "Vacuuming Complete." >> $backup_log

echo -n "Dumping Databases:" >> $backup_log
for i in "${databases[@]}"; do
	current_time=$(date +"%Y%m%d%N")
        #/usr/bin/pg_dump -Ft $i > "$backup_dir/$i$current_time"
	/usr/bin/pg_dump -Fc $i > "$backup_dir/$i$current_time"
        if [ $? -ne "0" ]
        then
          echo 'Failed to backup database' $i  >> $backup_log
          echo 'Failed to backup database' $i
        fi
        echo -n " $i" >> $backup_log
done
echo "." >> $backup_log
echo "Dumps Complete." >> $backup_log

# Remove backups and logs older than max_backups=hours
find $backup_dir -type f -mtime +7 -exec rm {} \;

echo "Backup rotation complete. Total size of backups:" >> $backup_log
echo "===============================================================" >> $backup_log
echo "End of Postgres Cleanup and Backup, " `date` >> $backup_log

