#!/bin/bash
#
#	(c) 2000-2012 uzERP LLP (support#uzerp.com). All rights reserved.
#
#	Released under GPLv3 license; see LICENSE.
#
set -e
download_dir=$1
install_type=$2
if [ "$install_type" = "" ]
then
  install_type='manual'
fi
# Absolute path to this script
SCRIPT=$(readlink -f $0)
# Absolute path this script is in
SCRIPTPATH=`dirname $SCRIPT`
install_dir=`basename $SCRIPTPATH`
if [ "$download_dir" = "" ]
then
  download_dir=$SCRIPTPATH
fi
#
clear
echo "******************************************************************"
rundate=`date`
echo "uzERP Installation Configuration - started $rundate"
echo "-----------------------------------------------------------------"
echo ""
echo "******************************************************************"
echo "|         Checking Installation and Apache configuration         |"
echo "------------------------------------------------------------------"
echo ""
if [ ! -d $download_dir ]
then
  echo "Package source directory $download_dir not found"
  exit -1
else
  if [ `ls -1 $download_dir/*.tar.gz | wc -l` -eq 0 ]
  then
    echo "Package source file not found"
    exit -1
  fi
fi

apache_root=`apache2 -V 2>/dev/null | grep HTTPD_ROOT | cut -s -d'"' -f2`
apache_conf=`apache2 -V 2>/dev/null | grep SERVER_CONFIG_FILE | cut -s -d'"' -f2`
if [ "$apache_root" != "" ]
then
  apache_conf=${apache_root}/${apache_conf}
fi
if [ "$apache_conf" = "" ]
then
  echo "Cannot find Apache conf file\n"
  exit -1
else
  echo "Apache conf file is $apache_conf"
fi
apache_root=`dirname $apache_conf`
apache_user=`grep APACHE_RUN_USER $apache_root/* | cut -s -d'=' -f2`
www_root=`grep $apache_user /etc/passwd | cut -d':' -f6`
if [ "$www_root" = "" -o ! -d "$www_root" ]
then
  echo "Cannot find WWW root directory"
  exit -1
else
  echo "Apache user is $apache_user"
  echo "$apache_user root directory is $www_root"
fi
current=
if [ -f /etc/uzerp/uzerp.conf ]
then
  current=( `cat /etc/uzerp/uzerp.conf | cut -d":" -f1` )
fi
if [ "$install_type" = "DEB-PKG" ]
then
  pkg_status=`dpkg -s uzerp | grep Status | cut -d":" -f2`
  pkg_version=`dpkg -s uzerp | grep -e "^Version" | cut -d":" -f2 | awk '{gsub(/^ +| +$/,"")}1'`
  if [ "$pkg_version" = "" ]
  then
    pkg_version=`dpkg -s uzerp | grep Config-Version | cut -d":" -f2 | awk '{gsub(/^ +| +$/,"")}1'`
  fi
else
  pkg_status=""
  pkg_version=`grep Version $download_dir/control | cut -d':' -f2 | awk '{gsub(/^ +| +$/,"")}1'`
fi
#installed=( $(< "/etc/uzerp/uzerp.conf" ) )
#cnt=${#installed[@]}
cnt=0
installed=
if [ "$current" != "" ]
then
  while read -d $'\n' line
  do
    installed[cnt++]=$line
  done < <( cat /etc/uzerp/uzerp.conf)
fi
if [ "$installed" != "" ]
then
  echo "------------------------------------------------------"
  echo "uzERP Configuration - Package Version $pkg_version"
  echo ""
  echo "Current Instances"
  echo "================="
  for (( i = 0 ; i < cnt ; i++ ))
  do
    n=$(($i + 1))
    echo "$n) ${installed[$i]}"
  done
  echo "------------------------------------------------------"
fi
response=
if [ "$current" = "" ]
then
  echo ""
  echo "No current instances found"
  echo -n "Do you want to create a new instance [Y] : "
  read value
  if [ "${value:0:1}" != "" -a "${value:0:1}" != "y" -a "${value:0:1}" != "Y" ]
  then
    exit 0
  fi
  response=1
elif [ "$pkg_status" = " install ok installed" -o "$pkg_status" = "" ]
then
  echo ""
  echo "Options"
  echo "======="
  echo "1) Create a new uzERP instance"
  echo "2) Update an existing uzERP instance"
  echo "3) Remove an existing uzERP instance"
  while [ "$response" = "" ]
  do
    echo -n "Please enter 1-3 or Q to quit : "
    read value
    if [ "$value" != "" ]
    then
      if [ "${value:0:1}" = "q" -o "${value:0:1}" = "Q" ]
      then
        exit 0
      fi
      set +e
      check=`echo "$value" | grep "[^0-9]"`
      set -e
      if [ "$check" != "" ]
      then
        echo "Please enter a number from the above list"
      elif [ "$value" -lt 1 -o "$value" -gt 3 ]
      then
        echo "This number is not in the above list - please re-enter"
      else
        response=$value
      fi
    fi
  done
  echo "------------------------------------------------------"
fi
if [ $response -eq 1 ]
then
  #
  # This is a new installation
  #
  echo -n "Enter name for new instance [uzerp] : "
  read value
  if [ "$value" = "" ]
  then
    value=uzerp
  fi
  mkdir -p "$www_root/$value"
  su -l $apache_user:$apache_user $www_root/$value
  cd $www_root/$value
  su -l $apache_user tar -zxf $download_dir/*.tar.gz
  if [ $? -ne 0 ]
  then
    echo "Failed to unpack source code"
    exit -1
  fi
  if [ ! -d install ]
  then
    echo "Cannot find install configuration directory"
    exit -1
  else
    if [ -f install/release_config.sample ]
    then
      su -l $apache_user cp install/release_config.sample install/release_config
    fi
  fi
  if [ ! -f install/install ]
  then
    echo "Cannot find install configuration script"
    exit -1
  fi
  install/install
  echo "$www_root/$value : $pkg_version" >> /etc/uzerp/uzerp.conf
else
  cnt=${#current[@]}
  if [ $cnt -eq 1 ]
  then
    instance=$current
  else
    for (( i = 0 ; i < cnt ; i++ ))
    do
      n=$(($i + 1))
      echo "$n) ${current[$i]}"
    done
    instance=
    echo "-------------------------------------------------------------"
    while [ "$instance" = "" ]
    do
      echo -n "Enter 1-${#current[@]} to select instance or Q to quit "
      read value
      if [ "$value" != "" ]
      then
        if [ "${value:0:1}" = "q" -o "$instance" = "Q" ]
        then
          exit -1
        fi
        set +e
        check=`echo "$value" | grep "[^0-9]"`
        set -e
        if [ "$check" != "" ]
        then
          echo "Please enter a number from the above list"
        elif [ "$value" -lt 1 -o "$value" -gt ${#current[@]} ]
        then
          echo "This number is not in the above list - please re-enter"
        else
          instance=${current[$(($value - 1))]}
        fi
      fi
    done
  fi
  echo "Selected instance is $instance"
fi

if [ $response -eq 2 ]
then
  #
  # This is an upgrade to an existing instance
  #
  www_root=`dirname $instance`
  instance=`basename $instance`
  if [ -d "$www_root/$instance" ]
  then
    echo "Upgrading system installed at $www_root/$instance"
    release_base=
    if [ -f "$www_root/$instance/install/release_config" ]
    then
      . $www_root/$instance/install/release_config
    elif [ -f "$www_root/$instance/release_config" ]
    then
      . $www_root/$instance/release_config
    elif [ -f "/var/releases/$instance/release_config" ]
    then
      . /var/releases/$instance/release_config
    else
      "Cannot find Release Configuration file"
      exit -1
    fi
    if [ "$release_base" = "" ]
    then
      release_base=/var/releases
    fi
    if [ ! -d $release_base/$instance ]
    then
      su -l $apache_user mkdir -p $release_base/$instance
    fi
    if [ ! -d "$release_base/$instance/$source" ]
    then
      su -l $apache_user mkdir -p $release_base/$instance/$source
    fi
    cp $download_dir/*.tar.gz $release_base/$instance/$source
    #
    # Unpack the latest files in the install directory
    #
    cd $www_root/$instance
    tar --keep-newer-files -zxf /etc/uzerp/install/*.tar.gz install
#   diff install/release_config install/release_config.sample > release_config.diff
#   if [ `wc -l release_config.diff` > 0 ]
#   then
#   fi
#   rm release_config.diff
    #
    # Now do the release
    #
    su -l $apache_user $www_root/$instance/install/installRelease $release_base/$instance $www_root/$instance
    if [ $? -ne 0 ]
    then
      exit -1
    fi
    current_version=`grep "$www_root/$instance :" /etc/uzerp/uzerp.conf | cut -d":" -f2`
    sed -i".bak" "\|$www_root/$instance|s/$current_version/$pkg_version/" /etc/uzerp/uzerp.conf
    if [ $? -ne 0 ]
    then
      exit -1
    fi
    current_version=`echo $current_version| awk '{gsub(/^ +| +$/,"")}1'`
    pkg_version=`echo $pkg_version| awk '{gsub(/^ +| +$/,"")}1'`
    sed -i".bak" "\|SYSTEM_VERSION|s/$current_version/$pkg_version/" $www_root/$instance/conf/config.php
    if [ $? -ne 0 ]
    then
      exit -1
    fi
  fi
fi

if [ $response -eq 3 ]
then
  #
  # Removal of instance requested
  #
  $instance/install/remove $instance
  if [ $? -ne 0 ]
  then
    echo "Failed to remove $instance"
  else
    sed -i".bak" "\:$instance:d" /etc/uzerp/uzerp.conf
    if [ $? -ne 0 ]
    then
      echo "Failed to update /etc/uzerp/uzerp.conf for $instance"
    fi
  fi
fi

echo "-----------------------------------------------------------------"
rundate=`date`
echo "uzERP Post-Installation Configuration - ended $rundate"
echo "******************************************************************"
